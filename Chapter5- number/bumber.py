# -*- coding: UTF-8 -*-
import math
'''
1.Python中表达式2 * （3 + 4）的值是多少？
2.Python中表达式2 * 3 + 4的值是多少？
3.Python中表达式2 + 3 * 4的值是多少？
4.通过什么工具你可以找到一个数字的平方根以及它的平方？
    ---求平方根、pi以及正切等等函数，在导入math模块后即可使用。
    为了找到一个数字的平方根，import math后调用math.sqrt（N）。
    为了得到一个数字的平方，使用指数表达式X ** 2，或者内置函数pow（X,2）。
    上述两种方式的任何一种也可以用来计算一个数的0.5次方（例如，X ** .5）。
5.表达式 1 + 2.0 + 3的结果是什么类型？
6.怎样能够截断或舍去浮点数的小数部分？
    ---int（N）函数和math.trunc（N）函数会省略小数部分，
    而round（N，digit）函数做四舍五入。
    我们可以使用 math.floor（N）来计算floor，并且使用字符串格式化操作来舍入以便于显示。
7.怎样将一个整数转换为浮点数？
    ---float（I）将整数转换为浮点数；在表达式中混合整数和浮点数也会实现转换。
    在某种意义上，Python 3.0 的/除法也会转换，它总是返回一个包含余数的浮点数结果，即便两个操作数都是整数。
8.如何将一个整数显示成八进制、十六进制或二进制的形式？
    ---内置函数oct（I）和hex（I）会将整数以八进制数和十六进制数字符串的形式返回。
    %字符串表达式也会实现这样的目标。
    在Python 2.6和Python 3.0中，bin（I）也会返回一个数字的二进制数字字符串。
    %字符串格式化表达式和字符串格式化方法也为这样的转换提供方法。
9.如何将一个八进制、十六进制或二进制数的字符串转换成平常的整数？
    ---int（S,base）函数能够用来让一个八进制和十六进制数的字符串转换为正常的整数（传入8、16或2作为base的参数）。
    eval（S）函数也能够用作这个目的，但是运行起来开销更大也有可能导致安全问题。
    注意整数总是在计算机内存中以二进制保存的；这些只不过是显示的字符串格式的转换而已。
'''
if __name__ == '__main__':
    print(2 * (3 + 4))  #1
    print(2 * 3 + 4)    #2
    print(2 + 3 * 4)    #3
    print(math.sqrt(4))    #开平方
    print(type(1 + 2.0 + 3))    #5
