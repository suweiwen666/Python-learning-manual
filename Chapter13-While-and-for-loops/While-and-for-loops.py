# -*- coding: UTF-8 -*-
'''

1.While和for之间的主要功能区别是什么？
---while循环是一条通用的循环语句，for循环设计用来在一个序列中遍历各项（序列需要是真正可迭代的）。
尽管while可以用计数器循环来模拟for循环，但它需要更多的代码并且可能运行起来更慢些。

2.break和continue之间有何区别？
---break语句立即退出一个循环（省略了下面的整个while或for循环语句），continue跳回到循环的顶部（跳转到while中测试之前的部分或for中的下一次元素获取）。

3.一个循环的else分句何时执行？
---while或for循环中的else分句会在循环离开时执行一次，但前提是循环是正常离开（没有运行break语句）。如果有的话，break会立刻离开循环，跳过else部分。

4.在Python中怎样编写一个基于计数器的循环？
---计数器循环可以使用while语句编写，并手动记录索引值，或者以for循环写成，使用range内置函数来产生连续的整数偏移值。
任何一种都不是Python中的推荐的做法，如果你只需要遍历序列中所有元素。只要可能就改用简单的for循环，不用range或计数器。这样做不仅更容易编写，而且通常运行得更快。

5.怎样使range用于for循环中？
---range内置函数可以用在一个for循环中来实现固定次数的重复，以按照偏移值而不是偏移值处的元素来扫描，从而，在过程中省略连续的元素，并且在遍历一个列表的时候修改它。
这样的用法并非都需要range，大多数有其他的替代方法——如今，扫描实际的元素、三重限制分片，以及列表解析往往是较好的解决方案（尽管老练的C程序员倾向于统计东西的数目）。

'''

if __name__ == '__main__':
    pass