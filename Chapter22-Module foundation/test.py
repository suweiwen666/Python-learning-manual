# -*- coding: UTF-8 -*-

'''
1.怎样创建模块？
---要创建模块时，只需编写一个包含Python语句的文本文件就可以了；每个原代码文件都会自动成为模块，而且也没有语法用来声明模块。
导入操作会把模块文件加载到内存中使其成为模块对象。你以可以用C或Java这类外部语言编写代码来创建模块，但是这类扩展模块不在本书讨论范围之内。

2.from语句和import语句有什么关系？
---from语句是导入整个模块，就像import语句那样，但是还有个步骤，就是会从被导入的模块中，复制一个或多个变量到from语句所在的作用域中。
这样可以让你直接使用被导入的变量名（name），而不是通过模块来使用变量名（module.name）。

3.reload函数和导入有什么关系？
---默认，模块是每个进程只导入一次。reload函数会强制模块再次被导入。这基本上都是用于开发过程中选取模块源代码的新版本，或者用在动态定制的场景中。

4.什么时候必须使用import，不能使用from？
---当需要读取两个不同模块中的相同变量名时，就必须使用import，而不能用from；因为你必须制定变量名所在模块，从而保证这两个变量名是独特的。

5.请列举出from语句三种潜在陷阱。
---from语句会让变量含义模糊（究竟是哪个模块定义的），通过reload调用时会有问题（变量名还是引用对象之前的版本），而且会破坏命名空间（可能悄悄覆盖正在作用域中使用的变量名）。
from *形式在多数情况下都很糟糕：它会严重地污染命名空间，让变量意义变得模糊，少用为妙。

'''
if __name__ == '__main__':
    pass