# -*- coding: UTF-8 -*-



'''
1.模块顶层以下划线开头的变量名的重要性是什么？
---模块顶层变量名以单个下划线开头时，当使用from *语句形式导入，这些变量名不会被复制到进行导入的作用域中。不过，这类变量名还是可通过import或者普通的from语句形式来导入。

2.当模块的__name__变量是字符串"__main__"时，代表了什么意义？
---如果模块的__name__变量是字符串"__main__"，代表了该文件是作为顶层脚本运行的，而不是被程序中另一个文件所导入的。也就是说，这个文件作为程序在使用，而不是一个库。

3.如果用户通过交互模式输入模块的变量名进行测试，你该怎样进行导入？
---用户输入脚本时通常作为字符串。要通过字符串名导入所引用的模块，你可以创建import语句并通过exec执行，或把字符串名传给__import__函数进行调用。

4.改变sys.path和设置PYTHONPATH来修改模块搜索路径有什么不同？
---修改sys.path只会影响一个正在运行的程序，是暂时的，当程序结束时，修改就会消失。
PYTHONPATH设置是存在于操作系统中的，机器上所有程序都会使用，而且对这些设置的修改在程序离开后还会保存。

5.如果模块__future__可让我们导入未来，那我们也能导入过去吗？
---不行，我们无法在Python中导入过去。我们可以安装（或顽固地使用）这门语言的旧版本，但是，最新的Python往往是最好的Python。

'''