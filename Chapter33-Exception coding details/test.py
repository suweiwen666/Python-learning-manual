# -*- coding: UTF-8 -*-

'''
1.try语句有什么用途？
---try语句可以捕捉异常并从中恢复：定义要运行的程序代码块，一个或多个处理器，用来处理代码块运行时可能引发的各种异常。

2.try语句的两个常见变体是什么？
---try语句两个常见变体就是try/except/else（捕捉异常）以及try/finally（指明清理动作，无论异常是否发生都必须运行）。
在Python 2.4中，这些是独立的语句，只能够通过语法嵌套统一起来。在2.5和后续版本中，except和finally代码块可在同一个的try语句中混合，所以这两个语句形式合并了。
在合并后的形式中，finally在try结束前执行，无论是否发生了异常或是否处理了异常。

3.raise语句有什么用途？
---raise语句引发（触发）异常。Python内部会在发生错误时引发内置异常。脚本也能通过raise触发内值或用户定义的异常。

4.assert语句是做什么用的？和其他哪些语句相像？
---assert语句在条件为假时，会引发AssertionError异常。这就像是包裹在if语句中的条件式raise语句。

5.with/as语句是做什么用的？和其他哪些语句相像？
---with/as语句的设计，是为了让必须在程序代码块周围发生的启动和终止活动一定会发生。
和try/finally语句（无论异常是否发生，其离开动作都会执行）类似，但是with/as有更丰富的基于对象的协议，可以定义进入和离开的动作。

'''